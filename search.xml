<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2021/01/23/test/"/>
      <url>/2021/01/23/test/</url>
      
        <content type="html"><![CDATA[<p>以下三种方式均可插入图片</p><ul><li><p><code>![1](1.jpeg)</code><br><img src="1.jpeg" alt="1"></p></li><li><p><code>{</code>% asset_img 1.jpeg %<code>}</code>   </p><img src="/2021/01/23/test/1.jpeg" class=""></li><li><p><code>&lt;img src="1.jpeg" &gt;</code></p><img src="1.jpeg"></li></ul><p>字体大小<br>例如：字体<font size="1">大小<font size="6">调节</font></font></p><font size="1"><font size="6"></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>html笔记</title>
      <link href="/2021/01/23/html-bi-ji/"/>
      <url>/2021/01/23/html-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h1><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset="utf-8"&gt;        &lt;title&gt;html概述&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        1、什么是html？            Hyper Text Markup Language        2、html运行在哪？            运行在浏览器上。            世界五大主流浏览器：                IE：微软的                FireFox：火狐（FF）                Chrome：谷歌                Opera：欧朋                safari:MAC OS专用（苹果专用浏览器）            国内前端程序员主要安装三个：                IE                 FireFox                 Chrome            前端程序员开发完成后需要在不同的浏览器上运行程序，以便发现浏览器兼容问题。        3、html怎么开发？            新建一个.html或者.htm结尾的文件。            使用记事本打开就能开发，浏览器打开就能运行。不需要编译。        4、什么是web？            web就是网站开发。        5、web程序员包括：            web前端程序员：需要精通html css JavaScript            web后台程序员：这个就不一定了，可能是C语言，也可能是C++，Java，PHP，python等。        这种系统架构被称为：B/S结构系统。        B:Browser(浏览器)        S：Serve(服务器)    &lt;/body&gt;&lt;/html&gt;</code></pre><h1 id="2-第一个html文件"><a href="#2-第一个html文件" class="headerlink" title="2.第一个html文件"></a>2.第一个html文件</h1><pre><code>&lt;!-- 凡是HTML页面中第一行是以下代码的表示该页面是一个HTML5页面：H5。 --&gt;&lt;!DOCTYPE html&gt;&lt;!-- 这是根 --&gt;&lt;html&gt;    &lt;!-- 头 --&gt;    &lt;head&gt;        &lt;!-- 这个是告诉浏览器采用哪一种字符编码方式打开该页面。一般这个编码方式要与文件编码方式相同，不然会乱码 --&gt;        &lt;meta charset="utf-8"&gt;        &lt;!-- 标题栏 --&gt;        &lt;title&gt;第一个html文件&lt;/title&gt;    &lt;/head&gt;    &lt;!-- 因为浏览器的容错机制，此处仍可显示 --&gt;    这里还可以显示吗    &lt;!-- 网页体 --&gt;    &lt;body&gt;        &lt;!-- 这里的内容显示在网页上。 --&gt;        这是一个html页面！    &lt;/body&gt;&lt;/html&gt;</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用hexo搭建博客</title>
      <link href="/2021/01/09/li-yong-hexo-da-jian-bo-ke/"/>
      <url>/2021/01/09/li-yong-hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a><a href="https://bet-yc.top/2020/04/28/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E6%96%87%E5%AD%97%E6%95%99%E7%A8%8B%E5%86%85%E5%90%AB%E6%89%80%E9%9C%80%E4%BB%A3%E7%A0%81/" target="_blank" rel="noopener">参考</a></h1><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ol><li>三个软件:<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a>，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">git for windows</a>，<a href="https://www.sublimetextcn.com/" target="_blank" rel="noopener">Sublime Text3</a></li><li>创建github账户，创建仓库，用户名.github.io，此处格式固定</li><li>在仓库里添加文件：index.html，随意写点内容，在浏览器网址栏输入：用户名.github.io，即可得到属于你自己网页。</li></ol><h1 id="链接你的电脑与网址"><a href="#链接你的电脑与网址" class="headerlink" title="链接你的电脑与网址"></a>链接你的电脑与网址</h1><ol><li></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2021/01/09/hexo/"/>
      <url>/2021/01/09/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo</a>？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。<br>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="Hexo的几个常用命令"><a href="#Hexo的几个常用命令" class="headerlink" title="Hexo的几个常用命令"></a>Hexo的几个常用命令</h2><p><code>hexo new [layout] &lt;title&gt;</code>：如<code>hexo new post 1</code>与<code>hexo new 1</code>都是在<code>_posts</code>文件夹下创建<code>1.md</code>文件。</p><p><code>hexo new page aboutme</code>：新建一个标题为 aboutme 的页面，默认链接地址为 主页地址/aboutme/。</p><p><code>hexo s</code>：启动本地服务器，用于预览主题。默认地址:<a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p><ul><li>hexo s 是 hexo server 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；</li><li>对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果。</li></ul><p><code>hexo g -d</code>：生成静态文件并部署。</p><p><code>hexo g</code>： hexo generate 的缩写，生成网站静态文件到默认设置的 public 文件夹。</p><p><code>hexo clean</code>：清除缓存文件 db.json 和已生成的静态文件 public 。</p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul><h2 id="如何向hexo博客中插入图片"><a href="#如何向hexo博客中插入图片" class="headerlink" title="如何向hexo博客中插入图片"></a>如何向hexo博客中插入图片</h2><p>以下三种方式均可插入图片</p><ul><li><p><code>![1](1.jpeg)</code><br><img src="1.jpeg" alt="1"></p></li><li><p><code>{</code>% asset_img 1.jpeg %<code>}</code>   </p><img src="/2021/01/09/hexo/1.jpeg" class=""></li><li><p><code>&lt;img src="1.jpeg" &gt;</code></p><img src="1.jpeg"></li></ul><p>在md文件中插入图片的语法为<code>![]()</code>。</p><p>其中<strong>方括号</strong>是图片描述，<strong>圆括号</strong>是图片路径。</p><p>一般来说有三种图片路径，分别是<strong>相对路径，绝对路径和网络路径</strong>。</p><p>相对路径：相对于当前文件的路径。</p><p>网络路径：引用网上的图片，直接复制图片地址，放在圆括号中就完事了。</p><p>绝对路径：图片在计算机中的绝对位置，</p><p>由于我们的博客是要部署在网站上，部署后会生成新的文件目录，此时图片与博客会在同一目录。</p><p>在hexo中使用<strong>文章资源文件夹</strong>需要在<code>config.yaml</code>文件中更改一下配置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>当该配置被应用后，使用<code>hexo new</code>命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><h2 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h2><p>插件<a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a>解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">marked</span><span class="token punctuation">:</span>  <span class="token key atrule">prependRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">postAsset</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>之后就可以在使用<code>![](image.jpg)</code>的方式愉快的插入图片了。</p><p>我们做了这么多都是为了方便，那么为什么不再方便一点呢。</p><h2 id="hexo与Typora的完美结合"><a href="#hexo与Typora的完美结合" class="headerlink" title="hexo与Typora的完美结合"></a>hexo与Typora的完美结合</h2><p>上述是从文章资源文件夹中引用图片，前提是<strong>先将图片放入到文章资源文件夹</strong>，如果图片数量众多的话，一张一张的放很影响效率。但是不用怕，我们有很方便的解决方法。</p><p><strong>Typora</strong>是我非常喜欢的Markdown文本编辑器，在之前的文章中也介绍过一点。</p><p>Typora对于插入图片的支持做得非常好，在<code>文件-&gt;偏好设置</code>或者直接<code>&lt;C-,&gt;</code>进入设置。</p><p><img src="hexo%E5%92%8CTypora%E7%9A%84%E5%AE%8C%E7%BE%8E%E7%BB%93%E5%90%88.jpg" alt="Typora与hexo的完美结合"></p><p>使用该配置后，可以直接复制网页中的图片地址，粘贴到Typora中后，会直接复制该图片到文章资源文件夹，同时自动更改路径。</p><p>如复制网络路径的图片<code>https://...../image.jpg</code>粘贴到Typora中叫<code>文章名</code>的文章后，图片会自动变为<code>![](文章名/image.jpg)</code>。</p><p>但我们知道部署后，文件路径是不同的，所以当我们插入完所有的图片后，我们还需要删除每个图片路径中的<code>文件名/</code>。不慌，也很简单。</p><p>在Typora编辑器中，使用<code>&lt;C-f&gt;</code>快捷键，将所有的<code>文章名/</code>替换为空即可删除。</p><p><img src="image-20201012140945525.png" alt="image-20201012140945525"></p><p>然后再将博客上传，图片就会随着文章一起打包。在网页中就可以看到正常显示的图片，大功告成。</p><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p><code>source</code>文件夹是存放用户资源的地方。<br>除<code>_posts</code>文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。<br>Markdown 和 HTML 文件会被解析并放到<code>public</code>文件夹，而其他文件会被拷贝过去。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
